{
    "type": "object",
    "properties": {
        "engine": {
            "type": "string",
            "default": "kraken",
            "enum": ["kraken"],
            "description": "Engine name."
            },
        "model_prefix": {"$ref": "common.schema#/definitions/model_prefix"},
        "nepoch": {"$ref": "common.schema#/definitions/nepoch"},
        "partition": {"$ref": "common.schema#/definitions/partition"},
        "learning_rate": {"$ref": "common.schema#/definitions/learning_rate"},
        "savefreq": {"$ref": "common.schema#/definitions/savefreq"},
        "batch_size": {"$ref": "common.schema#/definitions/batch_size"},
        "continue_from" : {"$ref": "common.schema#/definitions/continue_from"},
        "append": {"$ref": "common.schema#/definitions/append"},
        "model": {"$ref": "models/model_kraken.schema#/definitions/model"},
        "early_stop" : {
            "type": "object",
            "properties": {
                "min_improve" : {
                    "type" : "number",
                    "format": "float",
                    "default" : 0.005,
                    "description" : "Minimum improvement between epoches to reset early stopping. default is scales the delta by the best loss."
                },
            "nbest" : {
                "type" : "integer",
                "default" : 5,
                "description" : "Number of evaluations to wait before stopping training without improvement."
                }
            },
            "description": "Early stop parameters.",
            "additionalProperties": false
        },
        "optimizer" : {
            "type" : "string",
            "default" : "Adam",
            "description" : "Select optimizer Adam, SGD, RMSprop",
            "enum" : ["Adam", "SGD", "RMSprop"]
            },
        "momentum" : {
            "type" : "number",
            "format": "float",
            "default" : 0.9,
            "description" : "Momentum used with SGD optimizer. Ignored otherwise."
            },
        "weight_decay" : {
            "type" : "number",
            "format": "float",
            "default" : 0.0,
            "description" : "Weight decay, penalize the large weight, similar to regularization."
            },
        "schedule": {
            "type": "string",
            "default": "constant",
            "enum": ["constant", "1cycle"],
            "description": "Set learning rate scheduler. For 1cycle, cycle length is determined by the '--epoch' option."
        },
        "preload" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Whether to preload all the training set into memory for accelerating training."
            },
        "device" : {
            "type" : "string",
             "default" : "cpu",
             "description" : "Select device to use cpu, cuda:0, cuda:1, â€¦.",
             "pattern" : "cpu|cuda:[0-9]"
        },
        "codec": {
            "type": "string",
            "default": "",
            "description": "Load a codec JSON definition (invalid if loading existing model)"
        },
        "resize": {
            "type": "string",
            "default" : "fail",
            "enum": ["add", "both", "fail"],
            "description": "Codec/output layer resizing option. If set to 'add' code points will be added, 'both' will set the layer to match exactly the training data, 'fail' will abort if training data and model codec do not match."
        },
        "reorder": {
           "type" : "boolean",
            "default" : true,
            "description" : "Reordering of code points to display order"
        },
        "normalization": {
            "type": "string",
            "default": null,
            "enum": ["NFD", "NFKD", "NFC", "NFKC"],
            "description": "Ground truth normalization"
        },
        "normalize-whitespace": {
           "type" : "boolean",
            "default" : true,
            "description" : "Normalizes unicode whitespace."
        },
        "threads": {
            "type": "integer",
            "default": 1,
            "description": "Number of OpenMP threads and workers when  running on CPU."
        }
    },
    "additionalProperties": false
}
